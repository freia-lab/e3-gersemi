DATA_BLOCK "COMM_PARAM"
TITLE =Commissioning parameters
VERSION : 0.1


  STRUCT 	
   SQ1 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ2 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ3 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ4 : STRUCT 	
    CV680_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV680_Ramp_Time : INT  := 1;	//Time Period for slope
    CV680_Ramp_SP : REAL  := 5.000000e+001;	//SP for slope
    Res : ARRAY  [0 .. 44 ] OF INT ;	
   END_STRUCT ;	
   SQ5 : STRUCT 	
    CV700_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV700_Ramp_Time : INT  := 1;	//Time period for slope
    CV700_RampCl_SP : REAL ;	//SP for slope
    CV700_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV700_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 41 ] OF INT ;	
   END_STRUCT ;	
   SQ6 : STRUCT 	
    CV740_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV740_Ramp_Time : INT  := 1;	//Time period for slope
    CV740_RampCl_SP : REAL ;	//SP for slope
    CV740_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV740_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 41 ] OF INT ;	
   END_STRUCT ;	
   SQ7 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ8 : STRUCT 	
    Tps_Act_LT600 : INT  := 10;	//Time before sensor activation
    Tps_Act_LT660 : INT  := 10;	//Time before sensor activation
    Tps_Act_LT670 : INT  := 10;	//Time before sensor activation
    Tps_Act_LT680 : INT  := 10;	//Time before sensor activation
    Tps_Act_LT682 : INT  := 10;	//Time before sensor activation
    Tps_Act_LT683 : INT  := 10;	//Time before sensor activation
    Res : ARRAY  [0 .. 43 ] OF INT ;	
   END_STRUCT ;	
   SQ9 : STRUCT 	
    Wrn_FT580_Temp : INT  := 4;	//Warning temporisation
    CV600_RampCl_SP : REAL  := 1.000000e+000;	//SP for slope
    CV600_RampCl_Step : REAL  := 5.000000e+000;	//Step for slope
    CV600_RampCl_Time : INT  := 4;	//Time period for slope
    Res : ARRAY  [0 .. 43 ] OF INT ;	
   END_STRUCT ;	
   SQ10 : STRUCT 	
    Wrn_FT581_Temp : INT  := 4;	//Warning temporisation
    CV601_Ramp_SP : REAL  := 1.000000e+000;	//SP for slope
    CV601_Ramp_Step : REAL  := 4.000000e+000;	//Step for slope
    CV601_Ramp_Time : INT  := 4;	//Time period for slope
    CV602_RampCl_SP : REAL  := 1.000000e+000;	//SP for slope
    CV602_RampCl_Step : REAL  := 5.010000e+000;	//Step for slope
    CV602_RampCl_Time : INT  := 4;	//Time period for slope
    Res : ARRAY  [0 .. 38 ] OF INT ;	
   END_STRUCT ;	
   SQ11 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ12 : STRUCT 	
    Wrn_FT581_Temp : INT  := 2;	//Warning temporisation
    CV602_RampCl_SP : REAL ;	//SP for slope
    CV602_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV602_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 43 ] OF INT ;	
   END_STRUCT ;	
   SQ13 : STRUCT 	
    High_Tol_PT660 : REAL  := 5.000000e-001;	//High Tolerance
    Low_Tol_PT660 : REAL  := 5.000000e-001;	//Low Tolerance
    CV581_RampCl_SP : REAL ;	//SP for slope
    CV581_RampCl_Step : REAL  := 5.000000e+000;	//Step for slope
    CV581_RampCl_Time : INT  := 2;	//Time period for slope
    CV603_RampCl_SP : REAL ;	//SP for slope
    CV603_RampCl_Step : REAL  := 5.000000e+000;	//Step for slope
    CV603_RampCl_Time : INT  := 2;	//Time period for slope
    Res : ARRAY  [0 .. 35 ] OF INT ;	
   END_STRUCT ;	
   SQ14 : STRUCT 	
    Wrn_FT581_Temp : INT  := 1;	//Warning temporisation
    CV601_Ramp_SP : REAL  := 5.000000e+001;	//SP for slope
    CV601_Ramp_Step : REAL  := 5.000000e+000;	//Step for slope
    CV601_Ramp_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 43 ] OF INT ;	
   END_STRUCT ;	
   SQ15 : STRUCT 	
    Wrn_PT660_Temp : INT  := 3;	//Warning temporisation
    Wrn_FT583_Temp : INT  := 3;	//Warning temporisation
    CV601_RampCl_SP : REAL ;	//SP for slope
    CV601_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV601_RampCl_Time : INT  := 1;	//Time period for slope
    CV581_Ramp_SP : REAL  := 1.000000e+002;	//SP for slope
    CV581_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV581_Ramp_Time : INT  := 1;	//Time period for slope
    Wrn_FT583_1_Temp : INT  := 3;	//Warning temporisation
    Wrn_FT583_2_Temp : INT  := 3;	//Warning temporisation
    CV602_RampCl_SP : REAL ;	//SP for slope
    CV602_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV602_RampCl_Time : INT  := 1;	//Time period for slope
    CV680_RampCl_SP : REAL ;	//SP for slope
    CV680_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV680_RampCl_Time : INT  := 1;	//Time period for slope
    EH641_HL_Save : REAL  := 3.000000e+002;	//Placeholder for saving it before changing it in step6
    EH641_LL_Save : REAL  := 2.950000e+002;	//Placeholder for saving it before changing it in step6
    EH641_HL : REAL  := 7.000000e+001;	//EH641 HL until magent temp drops below 80K
    EH641_LL : REAL  := 6.000000e+001;	//EH641 HL until magent temp drops below 80K
    TT608_St7toSt6 : REAL  := 1.000000e+001;	//Temperature for transition Step7 -> Step6
    TT608_St6toSt5 : REAL  := 5.000000e+000;	//Temperature for transition Step6 -> Step5
    Step5_delay : INT  := 180;	//Delay for step 5
    ResF1 : REAL ;	//Reserve
    ResF2 : REAL ;	
    ResF3 : REAL ;	
    ResF4 : REAL ;	
    ResF5 : REAL ;	
    ResI1 : INT ;	
    ResI2 : INT ;	
    ResI3 : INT ;	
   END_STRUCT ;	
   SQ16 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ17 : STRUCT 	
    High_Tol_PT660 : REAL  := 2.000000e-001;	//High Tolerance
    Low_Tol_PT660 : REAL  := 5.000000e+000;	//Low Tolerance
    CV581_RampCl_SP : REAL ;	//SP for slope
    CV581_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV581_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 40 ] OF INT ;	
   END_STRUCT ;	
   SQ18 : STRUCT 	
    Spare : REAL ;	
    Res : ARRAY  [0 .. 47 ] OF INT ;	
   END_STRUCT ;	
   SQ19 : STRUCT 	
    Wrn_FT650_Temp : INT  := 3;	//Warning temporisation
    Wrn_FT651_Temp : INT  := 3;	//Warning temporisation
    Wrn_FT652_Temp : INT  := 3;	//Warning temporisation
    Wrn_FT653_Temp : INT  := 3;	//Warning temporisation
    CV650_RampCl_SP : REAL ;	//SP for slope
    CV650_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV650_RampCl_Time : INT  := 1;	//Time period for slope
    CV651_RampCl_SP : REAL ;	//SP for slope
    CV651_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV651_RampCl_Time : INT  := 1;	//Time period for slope
    CV652_RampCl_SP : REAL ;	//SP for slope
    CV652_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV652_RampCl_Time : INT  := 1;	//Time period for slope
    CV653_RampCl_SP : REAL ;	//SP for slope
    CV653_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV653_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 25 ] OF INT ;	
   END_STRUCT ;	
   SQ20 : STRUCT 	
    CV590_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV590_Ramp_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 46 ] OF INT ;	
   END_STRUCT ;	
   SQ21 : STRUCT 	
    EH600_Time_Run : INT  := 5;	//Time run heater
    EH600_Time_Delay : INT  := 15;	//Time delay heater
    EH354_Time_Start : INT  := 20;	//Time for start
    EH600_Time_Start : INT  := 10;	//Time for start
    EH601_Time_Start : INT  := 10;	//Time for start
    EH701_Time_Start : INT  := 10;	//Time for start
    EH702_Time_Start : INT  := 20;	//Time for start
    EH703_Time_Start : INT  := 30;	//Time for start
    Res : ARRAY  [0 .. 41 ] OF INT ;	
   END_STRUCT ;	
   SQ22 : STRUCT 	
    EH641_Time_Run : INT  := 7;	//Time run heater
    EH641_Time_Delay : INT  := 20;	//Time delay heater
    EH640_Time_Start : INT  := 10;	//Time for start
    EH741_Time_Start : INT  := 10;	//Time for start
    EH742_Time_Start : INT  := 20;	//Time for start
    EH743_Time_Start : INT  := 30;	//Time for start
    Res : ARRAY  [0 .. 43 ] OF INT ;	
   END_STRUCT ;	
   SQ23 : STRUCT 	
    EH_Magnet_Time_Run : INT  := 10;	//Time run heater
    EH_Magnet_Time_Delay : INT  := 20;	//Time delay heater
    EH660_Time_Start : INT  := 10;	//Time for start
    EH670_Time_Start : INT  := 20;	//Time for start
    EH680_Time_Start : INT  := 30;	//Time for start
    EH681_Time_Start : INT  := 40;	//Time for start
    EH682_Time_Start : INT  := 50;	//Time for start
    EH689_Time_Start : INT  := 60;	//Time for start
    EH761_Time_Start : INT  := 10;	//Time for start
    EH763_Time_Start : INT  := 20;	//Time for start
    EH765_Time_Start : INT  := 30;	//Time for start
    Res : ARRAY  [0 .. 38 ] OF INT ;	
   END_STRUCT ;	
   SQ24 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ25 : STRUCT 	
    Res : ARRAY  [0 .. 49 ] OF INT ;	
   END_STRUCT ;	
   SQ_ChgCir : STRUCT 	
    CV580_Ramp_SP : REAL  := 1.000000e+002;	//SP for slope
    CV580_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV580_Ramp_Time : INT  := 1;	//Time period for slope
    CV580_RampCl_SP : REAL ;	//SP for slope
    CV580_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV580_RampCl_Time : INT  := 1;	//Time period for slope
    CV581_Ramp_SP : REAL  := 1.000000e+002;	//SP for slope
    CV581_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV581_Ramp_Time : INT  := 1;	//Time period for slope
    CV581_RampCl_SP : REAL ;	//SP for slope
    CV581_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV581_RampCl_Time : INT  := 1;	//Time period for slope
    CV583_Ramp_SP : REAL  := 1.000000e+002;	//SP for slope
    CV583_Ramp_Step : REAL  := 1.000000e+001;	//Step for slope
    CV583_Ramp_Time : INT  := 1;	//Time period for slope
    CV583_RampCl_SP : REAL ;	//SP for slope
    CV583_RampCl_Step : REAL  := 1.000000e+001;	//Step for slope
    CV583_RampCl_Time : INT  := 1;	//Time period for slope
    Res : ARRAY  [0 .. 19 ] OF INT ;	
   END_STRUCT ;	
  END_STRUCT ;	
